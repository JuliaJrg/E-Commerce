generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cart {
  id             Int     @id @default(autoincrement())
  user_id        Int
  product_id     Int
  number_product Int
  product        product @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "cart_ibfk_2")
  users          users   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "cart_ibfk_1")

  @@index([product_id], map: "product_id")
  @@index([user_id], map: "user_id")
}

model product {
  id               Int               @id @default(autoincrement())
  name             String            @db.VarChar(255)
  img              String?           @db.Text
  brand            String            @db.VarChar(100)
  compatibility    Json?
  description      String?           @db.Text
  stocks           Int?
  price            Float?            @db.Float
  category_id      Int?
  sale_id          Int?
  product_category product_category? @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "product_ibfk_1")
  sale             sale?             @relation(fields: [sale_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "product_ibfk_2")
  cart             cart[]
  review_product   review_product[]

  @@index([category_id], map: "category_id")
  @@index([sale_id], map: "sale_id")
}

model product_category {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  description String?   @db.Text
  product     product[]
}

model review_product {
  id         Int      @id @default(autoincrement())
  user_id    Int?
  product_id Int?
  nbr_stars  Int?
  comment    String?  @db.Text
  product    product? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "review_product_ibfk_2")
  users      users?   @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "review_product_ibfk_1")

  @@index([product_id], map: "product_id")
  @@index([user_id], map: "user_id")
}

model sale {
  id         Int       @id @default(autoincrement())
  name       String?   @db.VarChar(100)
  sale_value String?   @db.VarChar(100)
  valid_time String?   @db.VarChar(100)
  sale_limit String?   @db.VarChar(100)
  options    String?   @db.VarChar(100)
  product    product[]
}

model user_adress {
  id          Int     @id @default(autoincrement())
  user_id     Int?
  adress      String? @db.VarChar(255)
  city        String? @db.VarChar(255)
  postal_code String? @db.VarChar(255)
  country     String? @db.VarChar(255)
  users       users?  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_adress_ibfk_1")

  @@index([user_id], map: "user_id")
}

model user_payment {
  id            Int      @id @default(autoincrement())
  user_id       Int?
  payment_type  String?  @db.VarChar(100)
  date_purchase DateTime @db.Date
  total_facture Float?   @db.Float
  bill_number   Int?
  delivery      String?  @db.VarChar(100)
  users         users?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_payment_ibfk_1")

  @@index([user_id], map: "user_id")
}

model users {
  id             Int              @id @default(autoincrement())
  first_name     String           @db.VarChar(100)
  last_name      String           @db.VarChar(100)
  birthday       DateTime         @db.Date
  phone          String?          @db.VarChar(50)
  email          String           @db.VarChar(255)
  password       String           @db.Text
  roles          String           @db.VarChar(100)
  company        String?          @db.VarChar(255)
  siret          String?          @db.VarChar(255)
  pro_verify     Int?             @default(0)
  cart           cart[]
  review_product review_product[]
  user_adress    user_adress[]
  user_payment   user_payment[]
}
